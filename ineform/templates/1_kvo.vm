outpath:${class.workspaceRelativePath}kvo/${classname}KVO.java
package ${package}.kvo;

import com.inepex.ineForm.shared.kvo.IneList;
import com.inepex.ineForm.shared.kvo.KeyValueObject;
import com.inepex.ineForm.shared.kvo.Relation;

public class ${classname}KVO extends KeyValueObject {

	private static final long serialVersionUID = 1L;

	public static final String descriptorName = "${classnameL1}Descriptor";

#foreach( $attr in $attrs )
#if($attr.static == false && !${attr.hasAnnotation("Kvo_Transparent")})
	public static final String k_${attr.name} = "${attr.name}";
#end
#end 

	public ${classname}KVO() {
		super(descriptorName);
	}

	public ${classname}KVO(AssistedObject other) {
		super(descriptorName);
		if (other != null)
			((KeyValueObject)other).shallowCopyTo(this);
	}
	
#foreach( $attr in $attrs )
#if ($attr.static == false && !${attr.hasAnnotation("Kvo_Transparent")})
#if ($attr.name == "id")
	public Long getId() {
		return super.getId();
	}
	
#elseif( $attr.type == "Date"  || $attr.enum)
	public Long get${attr.nameU1}() {
		if (longValues == null)
    		return null;

		return longValues.get(k_${attr.name});
	}
	
#elseif($attr.type == "Long" || $attr.type == "Double" || $attr.type == "String" || $attr.type == "Boolean")
	public ${attr.type} get${attr.nameU1}() {
		if (${attr.typeL1}Values == null)
    		return null;
			
		return ${attr.typeL1}Values.get(k_${attr.name});
	}

#elseif($attr.list == true)
	public IneList get${attr.nameU1}() {
		if (listValues == null)
    		return null;
		return listValues.get(k_${attr.name});
    }
#else 
    public Relation get${attr.nameU1}() {
		if (relationValues == null)
    		return null;
		return relationValues.get(k_${attr.name});
    }
	
#end
#end
#end
#foreach( $attr in $attrs )
#if($attr.static == false && !${attr.hasAnnotation("Kvo_Transparent")})
#if( $attr.type == "Date" || $attr.enum)
    public void set${attr.nameU1}(Long ${attr.name}) {
		set(k_${attr.name}, ${attr.name});
    }
	
#elseif($attr.type == "Long" || $attr.type == "Boolean" || $attr.type == "Double" || $attr.type == "String")
    public void set${attr.nameU1}(${attr.type} ${attr.name}) {
		set(k_${attr.name}, ${attr.name});
    }

#elseif($attr.list == true)
    public void set${attr.nameU1}(IneList ${attr.name}) {
		set(k_${attr.name}, ${attr.name});
    }
	
#else 
    public void set${attr.nameU1}(Relation ${attr.name}) {
		set(k_${attr.name}, ${attr.name});
    }

#end
#end
#end	

#foreach( $attr in $attrs )
#if($attr.static == false && !${attr.hasAnnotation("Kvo_Transparent")})
	public static String k_${attr.name}() {
		return k_${attr.name};
	}
	
#end
#end

}
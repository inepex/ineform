package com.inepex.ineFrame.shared;

import com.google.gwt.user.client.rpc.IsSerializable;
import com.inepex.ineFrame.client.i18n.IneFrameI18n;
import com.inepex.ineom.shared.IFConsts;

public enum Country implements IsSerializable {
    AFG("Afghanistan"),
    ALA("Åland Islands"),
    ALB("Albania"),
    DZA("Algeria"),
    ASM("American Samoa"),
    AND("Andorra"),
    AGO("Angola"),
    AIA("Anguilla"),
    ATA("Antarctica"),
    ATG("Antigua and Barbuda"),
    ARG("Argentina"),
    ARM("Armenia"),
    ABW("Aruba"),
    AUS("Australia"),
    AUT("Austria"),
    AZE("Azerbaijan"),
    BHS("Bahamas"),
    BHR("Bahrain"),
    BGD("Bangladesh"),
    BRB("Barbados"),
    BLR("Belarus"),
    BEL("Belgium"),
    BLZ("Belize"),
    BEN("Benin"),
    BMU("Bermuda"),
    BTN("Bhutan"),
    BOL("Bolivia"),
    BIH("Bosnia and Herzegovina"),
    BWA("Botswana"),
    BVT("Bouvet Island"),
    BRA("Brazil"),
    IOT("British Indian Ocean Territory"),
    BRN("Brunei"),
    BGR("Bulgaria"),
    BFA("Burkina Faso"),
    BDI("Burundi"),
    KHM("Cambodia"),
    CMR("Cameroon"),
    CAN("Canada"),
    CPV("Cape Verde"),
    CYM("Cayman Islands"),
    CAF("Central African Republic"),
    TCD("Chad"),
    CHL("Chile"),
    CHN("China"),
    CXR("Christmas Island"),
    CCK("Cocos (Keeling) Islands"),
    COL("Colombia"),
    COM("Comoros"),
    COG("Congo"),
    COD("Congo (DRC)"),
    COK("Cook Islands"),
    CRI("Costa Rica"),
    CIV("Côte d'Ivoire"),
    HRV("Croatia"),
    CUB("Cuba"),
    CYP("Cyprus"),
    CZE("Czech Republic"),
    DNK("Denmark"),
    DJI("Djibouti"),
    DMA("Dominica"),
    DOM("Dominican Republic"),
    ECU("Ecuador"),
    EGY("Egypt"),
    SLV("El Salvador"),
    GNQ("Equatorial Guinea"),
    ERI("Eritrea"),
    EST("Estonia"),
    ETH("Ethiopia"),
    FLK("Falkland Islands (Islas Malvinas)"),
    FRO("Faroe Islands"),
    FJI("Fiji Islands"),
    FIN("Finland"),
    FRA("France"),
    GUF("French Guiana"),
    PYF("French Polynesia"),
    ATF("French Southern and Antarctic Lands"),
    GAB("Gabon"),
    GMB("Gambia"),
    GEO("Georgia"),
    DEU("Germany"),
    GHA("Ghana"),
    GIB("Gibraltar"),
    GRC("Greece"),
    GRL("Greenland"),
    GRD("Grenada"),
    GLP("Guadeloupe"),
    GUM("Guam"),
    GTM("Guatemala"),
    GGY("Guernsey"),
    GIN("Guinea"),
    GNB("Guinea-Bissau"),
    GUY("Guyana"),
    HTI("Haiti"),
    HMD("Heard Island and McDonald Islands"),
    HND("Honduras"),
    HKG("Hong Kong SAR"),
    HUN("Hungary"),
    ISL("Iceland"),
    IND("India"),
    IDN("Indonesia"),
    IRN("Iran"),
    IRQ("Iraq"),
    IRL("Ireland"),
    IMN("Isle of Man"),
    ISR("Israel"),
    ITA("Italy"),
    JAM("Jamaica"),
    SJM("Jan Mayen"),
    JPN("Japan"),
    JEY("Jersey"),
    JOR("Jordan"),
    KAZ("Kazakhstan"),
    KEN("Kenya"),
    KIR("Kiribati"),
    KOR("Korea"),
    KWT("Kuwait"),
    KGZ("Kyrgyzstan"),
    LAO("Laos"),
    LVA("Latvia"),
    LBN("Lebanon"),
    LSO("Lesotho"),
    LBR("Liberia"),
    LBY("Libya"),
    LIE("Liechtenstein"),
    LTU("Lithuania"),
    LUX("Luxembourg"),
    MAC("Macao SAR"),
    MKD("Macedonia"),
    MDG("Madagascar"),
    MWI("Malawi"),
    MYS("Malaysia"),
    MDV("Maldives"),
    MLI("Mali"),
    MLT("Malta"),
    MHL("Marshall Islands"),
    MTQ("Martinique"),
    MRT("Mauritania"),
    MUS("Mauritius"),
    MYT("Mayotte"),
    MEX("Mexico"),
    FSM("Micronesia"),
    MDA("Moldova"),
    MCO("Monaco"),
    MNG("Mongolia"),
    MNE("Montenegro"),
    MSR("Montserrat"),
    MAR("Morocco"),
    MOZ("Mozambique"),
    MMR("Myanmar"),
    NAM("Namibia"),
    NRU("Nauru"),
    NPL("Nepal"),
    NLD("Netherlands"),
    ANT("Netherlands Antilles"),
    NCL("New Caledonia"),
    NZL("New Zealand"),
    NIC("Nicaragua"),
    NER("Niger"),
    NGA("Nigeria"),
    NIU("Niue"),
    NFK("Norfolk Island"),
    PRK("North Korea"),
    MNP("Northern Mariana Islands"),
    NOR("Norway"),
    OMN("Oman"),
    PAK("Pakistan"),
    PLW("Palau"),
    PSE("Palestinian Authority"),
    PAN("Panama"),
    PNG("Papua New Guinea"),
    PRY("Paraguay"),
    PER("Peru"),
    PHL("Philippines"),
    PCN("Pitcairn Islands"),
    POL("Poland"),
    PRT("Portugal"),
    PRI("Puerto Rico"),
    QAT("Qatar"),
    REU("Reunion"),
    ROU("Romania"),
    RUS("Russia"),
    RWA("Rwanda"),
    WSM("Samoa"),
    SMR("San Marino"),
    STP("São Tomé and Príncipe"),
    SAU("Saudi Arabia"),
    SEN("Senegal"),
    SRB("Serbia"),
    SYC("Seychelles"),
    SLE("Sierra Leone"),
    SGP("Singapore"),
    SVK("Slovakia"),
    SVN("Slovenia"),
    SLB("Solomon Islands"),
    SOM("Somalia"),
    ZAF("South Africa"),
    SGS("South Georgia and the South Sandwich Islands"),
    ESP("Spain"),
    LKA("Sri Lanka"),
    BLM("St. Barthélemy"),
    SHN("St. Helena"),
    KNA("St. Kitts and Nevis"),
    LCA("St. Lucia"),
    MAF("St. Martin"),
    SPM("St. Pierre and Miquelon"),
    VCT("St. Vincent and the Grenadines"),
    SDN("Sudan"),
    SUR("Suriname"),
    SWZ("Swaziland"),
    SWE("Sweden"),
    CHE("Switzerland"),
    SYR("Syria"),
    TWN("Taiwan"),
    TJK("Tajikistan"),
    TZA("Tanzania"),
    THA("Thailand"),
    TLS("Timor-Leste"),
    TGO("Togo"),
    TKL("Tokelau"),
    TON("Tonga"),
    TTO("Trinidad and Tobago"),
    TUN("Tunisia"),
    TUR("Turkey"),
    TKM("Turkmenistan"),
    TCA("Turks and Caicos Islands"),
    TUV("Tuvalu"),
    UGA("Uganda"),
    UKR("Ukraine"),
    ARE("United Arab Emirates"),
    GBR("United Kingdom"),
    USA("United States"),
    UMI("United States Minor Outlying Islands"),
    URY("Uruguay"),
    UZB("Uzbekistan"),
    VUT("Vanuatu"),
    VAT("Vatican City"),
    VEN("Venezuela"),
    VNM("Vietnam"),
    VGB("Virgin Islands, British"),
    VIR("Virgin Islands, U.S."),
    WLF("Wallis and Futuna"),
    YEM("Yemen"),
    ZMB("Zambia"),
    ZWE("Zimbabwe");

    public final String displayName;

    private Country(String longname) {
        this.displayName = longname;
    }

    public static String getValuesAsString() {
        String s = "";
        for (Country item : values()) {
            s += IneFrameI18n.getI18nText("country" + item.toString())
                + IFConsts.enumValueSplitChar;
        }
        if (s.length() > 0)
            s = s.substring(0, s.length() - 1);
        return s;
    }

}
